<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Hibernate OGM, Domain model persistence for NoSQL datastores ~ ~ License: 
    GNU Lesser General Public License (LGPL), version 2.1 or later ~ See the 
    lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.ogm</groupId>
        <artifactId>hibernate-ogm-parent</artifactId>
        <version>5.2.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>hibernate-ogm-neo4j</artifactId>

    <name>Hibernate OGM for Neo4j</name>
    <description>Persist objects in Neo4j</description>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.20.1</version>
                    <configuration>
                        <images>
                            <image>
                                <name>neo4j:${neo4jVersion}</name>
                                <run>
                                    <ports>
                                        <port>${neo4j.port}:7474</port>
                                        <port>7687:7687</port>
                                    </ports>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${neo4j.port}</url>
                                        </http>
                                        <time>10000</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                    </configuration>
                    <!-- Connect start/stop to pre- and post-integration-test 
                        phase, respectively if you want to start your docker containers during integration 
                        tests -->
                    <executions>
                        <execution>
                            <id>start</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop</id>
                            <phase>package</phase>
                            <goals>
                                <goal>stop</goal>
                                <goal>remove</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                    <executions>
                        <execution>
                            <id>Set Neo4j password</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>curl</executable>
                                <arguments>
                                    <argument>-H</argument>
                                    <argument>Authorization: Basic bmVvNGo6bmVvNGo=</argument>
                                    <argument>-H</argument>
                                    <argument>Accept: application/json; charset=UTF-8</argument>
                                    <argument>-H</argument>
                                    <argument>Content-Type: application/json</argument>
                                    <argument>-X</argument>
                                    <argument>POST</argument>
                                    <argument>-d</argument>
                                    <argument>{"password":"${env.NEO4J_PASSWORD}"}</argument>
                                    <argument>http://localhost:${neo4j.port}/user/neo4j/password</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>
                        <dependency>org.hibernate.ogm:hibernate-ogm-core</dependency>
                    </dependenciesToScan>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Compile -->
        <dependency>
            <groupId>org.hibernate.ogm</groupId>
            <artifactId>hibernate-ogm-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-processor</artifactId>
            <!-- "provided" is used as "compile-only" here; It's NOT needed 
                at runtime -->
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver</artifactId>
        </dependency>

        <!-- For tests with mass indexer -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-orm</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- RESTEasy and Jackson -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>org.parboiled</groupId>
            <artifactId>parboiled-java</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.ogm</groupId>
            <artifactId>hibernate-ogm-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.takari.junit</groupId>
            <artifactId>takari-cpsuite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-install</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Executes the tests against an embedded Neo4j -->
        <profile>
            <id>neo4j-embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <datastoreProvider>neo4j_embedded</datastoreProvider>
            </properties>
        </profile>

        <!-- Executes the tests against a separately started Neo4j server 
            using the Bolt protocol interface -->
        <profile>
            <id>neo4j-bolt</id>
            <properties>
                <datastoreProvider>neo4j_bolt</datastoreProvider>
            </properties>
        </profile>

        <!-- Executes the tests against a separately started Neo4j server 
            using the HTTP interface -->
        <profile>
            <id>neo4j-http</id>
            <properties>
                <datastoreProvider>neo4j_http</datastoreProvider>
            </properties>
        </profile>

        <profile>
            <id>use-docker</id>
            <activation>
                <property>
                    <name>useDocker</name>
                </property>
            </activation>
            <properties>
                <neo4j.port>${env.NEO4J_PORT}</neo4j.port>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>env.NEO4J_PORT</property>
                                            <message>NEO4J_PORT environment property not found ( yu)!</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>env.NEO4J_PASSWORD</property>
                                            <message>You must set a NEO4J_PASSWORD environment property!</message>
                                        </requireProperty>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
